version: '3.5'

networks: 
  kafka_network:
    name: kafka_network

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks: 
      - kafka_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    networks: 
      - kafka_network
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_ROOT_LOGLEVEL: WARN

  kafka-setup:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka-setup
    container_name: kafka-setup
    networks:
      - kafka_network
    depends_on:
      - broker
    volumes:
      - $PWD/connectors:/tmp/connectors
      - $PWD/dashboard:/tmp/dashboard
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker:9092 1 20 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 3 --replication-factor 1 --topic ozon-category && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic ozon-products'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  worker:
    build: worker
    ports:
      - "5000:5000"
    depends_on: 
      - broker
    networks: 
      - kafka_network

  parser:
    build: parser
    scale: 3
    depends_on:
      - broker
      - worker
    networks:
      - kafka_network